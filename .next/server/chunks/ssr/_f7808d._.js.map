{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/app/%28main%29/dashboard/page.jsx"],"sourcesContent":["import { Suspense } from \"react\";\r\nimport { getUserAccounts } from \"@/actions/dashboard\";\r\nimport { getDashboardData } from \"@/actions/dashboard\";\r\nimport { getCurrentBudget } from \"@/actions/budget\";\r\nimport { AccountCard } from \"./_components/account-card\";\r\nimport { CreateAccountDrawer } from \"@/components/create-account-drawer\";\r\nimport { BudgetProgress } from \"./_components/budget-progress\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Plus } from \"lucide-react\";\r\nimport { DashboardOverview } from \"./_components/transaction-overview\";\r\n\r\nexport default async function DashboardPage() {\r\n  const [accounts, transactions] = await Promise.all([\r\n    getUserAccounts(),\r\n    getDashboardData(),\r\n  ]);\r\n\r\n  const defaultAccount = accounts?.find((account) => account.isDefault);\r\n\r\n  // Get budget for default account\r\n  let budgetData = null;\r\n  if (defaultAccount) {\r\n    budgetData = await getCurrentBudget(defaultAccount.id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Budget Progress */}\r\n      <BudgetProgress\r\n        initialBudget={budgetData?.budget}\r\n        currentExpenses={budgetData?.currentExpenses || 0}\r\n      />\r\n\r\n      {/* Dashboard Overview */}\r\n      <DashboardOverview\r\n        accounts={accounts}\r\n        transactions={transactions || []}\r\n      />\r\n\r\n      {/* Accounts Grid */}\r\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\r\n        <CreateAccountDrawer>\r\n          <Card className=\"hover:shadow-md transition-shadow cursor-pointer border-dashed\">\r\n            <CardContent className=\"flex flex-col items-center justify-center text-muted-foreground h-full pt-5\">\r\n              <Plus className=\"h-10 w-10 mb-2\" />\r\n              <p className=\"text-sm font-medium\">Add New Account</p>\r\n            </CardContent>\r\n          </Card>\r\n        </CreateAccountDrawer>\r\n        {accounts.length > 0 &&\r\n          accounts?.map((account) => (\r\n            <AccountCard key={account.id} account={account} />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AADA;;;;;;;;;;;;AAGe,eAAe;IAC5B,MAAM,CAAC,UAAU,aAAa,GAAG,MAAM,QAAQ,GAAG,CAAC;QACjD,CAAA,GAAA,oHAAA,CAAA,kBAAe,AAAD;QACd,CAAA,GAAA,oHAAA,CAAA,mBAAgB,AAAD;KAChB;IAED,MAAM,iBAAiB,UAAU,KAAK,CAAC,UAAY,QAAQ,SAAS;IAEpE,iCAAiC;IACjC,IAAI,aAAa;IACjB,IAAI,gBAAgB;QAClB,aAAa,MAAM,CAAA,GAAA,iHAAA,CAAA,mBAAgB,AAAD,EAAE,eAAe,EAAE;IACvD;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC,kKAAA,CAAA,iBAAc;gBACb,eAAe,YAAY;gBAC3B,iBAAiB,YAAY,mBAAmB;;;;;;0BAIlD,8OAAC,uKAAA,CAAA,oBAAiB;gBAChB,UAAU;gBACV,cAAc,gBAAgB,EAAE;;;;;;0BAIlC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,0IAAA,CAAA,sBAAmB;kCAClB,cAAA,8OAAC,yHAAA,CAAA,OAAI;4BAAC,WAAU;sCACd,cAAA,8OAAC,yHAAA,CAAA,cAAW;gCAAC,WAAU;;kDACrB,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAChB,8OAAC;wCAAE,WAAU;kDAAsB;;;;;;;;;;;;;;;;;;;;;;oBAIxC,SAAS,MAAM,GAAG,KACjB,UAAU,IAAI,CAAC,wBACb,8OAAC,+JAAA,CAAA,cAAW;4BAAkB,SAAS;2BAArB,QAAQ,EAAE;;;;;;;;;;;;;;;;;AAKxC"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/actions/account.js"],"sourcesContent":["\"use server\";\r\n\r\nimport { db } from \"@/lib/prisma\";\r\nimport { auth } from \"@clerk/nextjs/server\";\r\nimport { revalidatePath } from \"next/cache\";\r\n\r\nconst serializeDecimal = (obj) => {\r\n  const serialized = { ...obj };\r\n  if (obj.balance) {\r\n    serialized.balance = obj.balance.toNumber();\r\n  }\r\n  if (obj.amount) {\r\n    serialized.amount = obj.amount.toNumber();\r\n  }\r\n  return serialized;\r\n};\r\n\r\nexport async function getAccountWithTransactions(accountId) {\r\n  const { userId } = await auth();\r\n  if (!userId) throw new Error(\"Unauthorized\");\r\n\r\n  const user = await db.user.findUnique({\r\n    where: { clerkUserId: userId },\r\n  });\r\n\r\n  if (!user) throw new Error(\"User not found\");\r\n\r\n  const account = await db.account.findUnique({\r\n    where: {\r\n      id: accountId,\r\n      userId: user.id,\r\n    },\r\n    include: {\r\n      transactions: {\r\n        orderBy: { date: \"desc\" },\r\n      },\r\n      _count: {\r\n        select: { transactions: true },\r\n      },\r\n    },\r\n  });\r\n\r\n  if (!account) return null;\r\n\r\n  return {\r\n    ...serializeDecimal(account),\r\n    transactions: account.transactions.map(serializeDecimal),\r\n  };\r\n}\r\n\r\nexport async function bulkDeleteTransactions(transactionIds) {\r\n  try {\r\n    const { userId } = await auth();\r\n    if (!userId) throw new Error(\"Unauthorized\");\r\n\r\n    const user = await db.user.findUnique({\r\n      where: { clerkUserId: userId },\r\n    });\r\n\r\n    if (!user) throw new Error(\"User not found\");\r\n\r\n    // Get transactions to calculate balance changes\r\n    const transactions = await db.transaction.findMany({\r\n      where: {\r\n        id: { in: transactionIds },\r\n        userId: user.id,\r\n      },\r\n    });\r\n\r\n    // Group transactions by account to update balances\r\n    const accountBalanceChanges = transactions.reduce((acc, transaction) => {\r\n      const change =\r\n        transaction.type === \"EXPENSE\"\r\n          ? transaction.amount\r\n          : -transaction.amount;\r\n      acc[transaction.accountId] = (acc[transaction.accountId] || 0) + change;\r\n      return acc;\r\n    }, {});\r\n\r\n    // Delete transactions and update account balances in a transaction\r\n    await db.$transaction(async (tx) => {\r\n      // Delete transactions\r\n      await tx.transaction.deleteMany({\r\n        where: {\r\n          id: { in: transactionIds },\r\n          userId: user.id,\r\n        },\r\n      });\r\n\r\n      // Update account balances\r\n      for (const [accountId, balanceChange] of Object.entries(\r\n        accountBalanceChanges\r\n      )) {\r\n        await tx.account.update({\r\n          where: { id: accountId },\r\n          data: {\r\n            balance: {\r\n              increment: balanceChange,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    });\r\n\r\n    revalidatePath(\"/dashboard\");\r\n    revalidatePath(\"/account/[id]\");\r\n\r\n    return { success: true };\r\n  } catch (error) {\r\n    return { success: false, error: error.message };\r\n  }\r\n}\r\n\r\nexport async function updateDefaultAccount(accountId) {\r\n  try {\r\n    const { userId } = await auth();\r\n    if (!userId) throw new Error(\"Unauthorized\");\r\n\r\n    const user = await db.user.findUnique({\r\n      where: { clerkUserId: userId },\r\n    });\r\n\r\n    if (!user) {\r\n      throw new Error(\"User not found\");\r\n    }\r\n\r\n    // First, unset any existing default account\r\n    await db.account.updateMany({\r\n      where: {\r\n        userId: user.id,\r\n        isDefault: true,\r\n      },\r\n      data: { isDefault: false },\r\n    });\r\n\r\n    // Then set the new default account\r\n    const account = await db.account.update({\r\n      where: {\r\n        id: accountId,\r\n        userId: user.id,\r\n      },\r\n      data: { isDefault: true },\r\n    });\r\n\r\n    revalidatePath(\"/dashboard\");\r\n    return { success: true, data: serializeTransaction(account) };\r\n  } catch (error) {\r\n    return { success: false, error: error.message };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAR9B,SAASE,IAAI,EAAEC,KAAK,GAAE;AALtB,yEAAyE;AAEzE,cAAc;AAdd,SAASH,kBAAkB,QAAQ,2DAA2D;AAAqC,EAAC;AA4BpI,OAAO,MAAMM,eAAe;AAG5B,EAAC;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,MAAQ;gCACxBC,IAAAA;4BAAAA,CAAM;4BAAA;iCACNC,UAAU;sCACV,IAAA,CAAA;gCAAA,QAAA;oCAAA,IAAA,iBAA2C;oCAAA;iCAAA;;+BAC3CC,YAAY;;yBACZC,UAAU;8BACVC,IAAAA,CAAAA,GAAU;wBAAA,CAAE,SAAA;4BAAA,IAAA;4BAAA;yBAAA;;mBACd;;aACAC,UAAU;sBACRC,IAAAA,CAAAA;gBAAAA,CAAYnB,SAAAA;oBAAAA,IAAAA;oBAAAA;iBAAAA;kBACd,WAAA;oBAAA,IAAA;oBAAA;iBAAA;YACF;SAAA,CAAE","ignoreList":[0]}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 538, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/node_modules/%40clerk/nextjs/dist/esm/app-router/server-actions.js"],"sourcesContent":["\"use server\";\nimport { cookies } from \"next/headers\";\nasync function invalidateCacheAction() {\n  void (await cookies()).delete(`__clerk_invalidate_cache_cookie_${Date.now()}`);\n}\nexport {\n  invalidateCacheAction\n};\n"],"names":[],"mappings":";;;;;AACA;;;;;AACA,eAAe;IACb,KAAK,CAAC,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,GAAG,EAAE,MAAM,CAAC,CAAC,gCAAgC,EAAE,KAAK,GAAG,IAAI;AAC/E;;;;IAEE;;AAAA,+OAAA","ignoreList":[0]}},
    {"offset": {"line": 557, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 563, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 576, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}