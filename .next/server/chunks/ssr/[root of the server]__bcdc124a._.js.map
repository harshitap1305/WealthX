{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/lib/arcjet.js"],"sourcesContent":["import arcjet, { tokenBucket } from \"@arcjet/next\";\r\n\r\nconst aj = arcjet({\r\n  key: process.env.ARCJET_KEY,\r\n  characteristics: [\"userId\"], // Track based on Clerk userId\r\n  rules: [\r\n    // Rate limiting specifically for collection creation\r\n    tokenBucket({\r\n      mode: \"LIVE\",\r\n      refillRate: 10, // 10 collections\r\n      interval: 3600, // per hour\r\n      capacity: 10, // maximum burst capacity\r\n    }),\r\n  ],\r\n});\r\n\r\nexport default aj;\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AAAA;;AAEA,MAAM,KAAK,CAAA,GAAA,yJAAA,CAAA,UAAM,AAAD,EAAE;IAChB,KAAK,QAAQ,GAAG,CAAC,UAAU;IAC3B,iBAAiB;QAAC;KAAS;IAC3B,OAAO;QACL,qDAAqD;QACrD,CAAA,GAAA,+IAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,YAAY;YACZ,UAAU;YACV,UAAU;QACZ;KACD;AACH;uCAEe","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/actions/dashboard.js"],"sourcesContent":["\"use server\";\r\n\r\nimport aj from \"@/lib/arcjet\";\r\nimport { db } from \"@/lib/prisma\";\r\nimport { request } from \"@arcjet/next\";\r\nimport { auth } from \"@clerk/nextjs/server\";\r\nimport { revalidatePath } from \"next/cache\";\r\n\r\nconst serializeTransaction = (obj) => {\r\n  const serialized = { ...obj };\r\n  if (obj.balance) {\r\n    serialized.balance = obj.balance.toNumber();\r\n  }\r\n  if (obj.amount) {\r\n    serialized.amount = obj.amount.toNumber();\r\n  }\r\n  return serialized;\r\n};\r\n\r\nexport async function getUserAccounts() {\r\n  const { userId } = await auth();\r\n  if (!userId) throw new Error(\"Unauthorized\");\r\n\r\n  const user = await db.user.findUnique({\r\n    where: { clerkUserId: userId },\r\n  });\r\n\r\n  if (!user) {\r\n    throw new Error(\"User not found\");\r\n  }\r\n\r\n  try {\r\n    const accounts = await db.account.findMany({\r\n      where: { userId: user.id },\r\n      orderBy: { createdAt: \"desc\" },\r\n      include: {\r\n        _count: {\r\n          select: {\r\n            transactions: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    // Serialize accounts before sending to client\r\n    const serializedAccounts = accounts.map(serializeTransaction);\r\n\r\n    return serializedAccounts;\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n}\r\n\r\nexport async function createAccount(data) {\r\n  try {\r\n    const { userId } = await auth();\r\n    if (!userId) throw new Error(\"Unauthorized\");\r\n\r\n    // Get request data for ArcJet\r\n    const req = await request();\r\n\r\n    // Check rate limit\r\n    const decision = await aj.protect(req, {\r\n      userId,\r\n      requested: 1, // Specify how many tokens to consume\r\n    });\r\n\r\n    if (decision.isDenied()) {\r\n      if (decision.reason.isRateLimit()) {\r\n        const { remaining, reset } = decision.reason;\r\n        console.error({\r\n          code: \"RATE_LIMIT_EXCEEDED\",\r\n          details: {\r\n            remaining,\r\n            resetInSeconds: reset,\r\n          },\r\n        });\r\n\r\n        throw new Error(\"Too many requests. Please try again later.\");\r\n      }\r\n\r\n      throw new Error(\"Request blocked\");\r\n    }\r\n\r\n    const user = await db.user.findUnique({\r\n      where: { clerkUserId: userId },\r\n    });\r\n\r\n    if (!user) {\r\n      throw new Error(\"User not found\");\r\n    }\r\n\r\n    // Convert balance to float before saving\r\n    const balanceFloat = parseFloat(data.balance);\r\n    if (isNaN(balanceFloat)) {\r\n      throw new Error(\"Invalid balance amount\");\r\n    }\r\n\r\n    // Check if this is the user's first account\r\n    const existingAccounts = await db.account.findMany({\r\n      where: { userId: user.id },\r\n    });\r\n\r\n    // If it's the first account, make it default regardless of user input\r\n    // If not, use the user's preference\r\n    const shouldBeDefault =\r\n      existingAccounts.length === 0 ? true : data.isDefault;\r\n\r\n    // If this account should be default, unset other default accounts\r\n    if (shouldBeDefault) {\r\n      await db.account.updateMany({\r\n        where: { userId: user.id, isDefault: true },\r\n        data: { isDefault: false },\r\n      });\r\n    }\r\n\r\n    // Create new account\r\n    const account = await db.account.create({\r\n      data: {\r\n        ...data,\r\n        balance: balanceFloat,\r\n        userId: user.id,\r\n        isDefault: shouldBeDefault, // Override the isDefault based on our logic\r\n      },\r\n    });\r\n\r\n    // Serialize the account before returning\r\n    const serializedAccount = serializeTransaction(account);\r\n\r\n    revalidatePath(\"/dashboard\");\r\n    return { success: true, data: serializedAccount };\r\n  } catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n}\r\n\r\nexport async function getDashboardData() {\r\n  const { userId } = await auth();\r\n  if (!userId) throw new Error(\"Unauthorized\");\r\n\r\n  const user = await db.user.findUnique({\r\n    where: { clerkUserId: userId },\r\n  });\r\n\r\n  if (!user) {\r\n    throw new Error(\"User not found\");\r\n  }\r\n\r\n  // Get all user transactions\r\n  const transactions = await db.transaction.findMany({\r\n    where: { userId: user.id },\r\n    orderBy: { date: \"desc\" },\r\n  });\r\n\r\n  return transactions.map(serializeTransaction);\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/actions/budget.js"],"sourcesContent":["\"use server\";\r\n\r\nimport { db } from \"@/lib/prisma\";\r\nimport { auth } from \"@clerk/nextjs/server\";\r\nimport { revalidatePath } from \"next/cache\";\r\n\r\nexport async function getCurrentBudget(accountId) {\r\n  try {\r\n    const { userId } = await auth();\r\n    if (!userId) throw new Error(\"Unauthorized\");\r\n\r\n    const user = await db.user.findUnique({\r\n      where: { clerkUserId: userId },\r\n    });\r\n\r\n    if (!user) {\r\n      throw new Error(\"User not found\");\r\n    }\r\n\r\n    const budget = await db.budget.findFirst({\r\n      where: {\r\n        userId: user.id,\r\n      },\r\n    });\r\n\r\n    // Get current month's expenses\r\n    const currentDate = new Date();\r\n    const startOfMonth = new Date(\r\n      currentDate.getFullYear(),\r\n      currentDate.getMonth(),\r\n      1\r\n    );\r\n    const endOfMonth = new Date(\r\n      currentDate.getFullYear(),\r\n      currentDate.getMonth() + 1,\r\n      0\r\n    );\r\n\r\n    const expenses = await db.transaction.aggregate({\r\n      where: {\r\n        userId: user.id,\r\n        type: \"EXPENSE\",\r\n        date: {\r\n          gte: startOfMonth,\r\n          lte: endOfMonth,\r\n        },\r\n        accountId,\r\n      },\r\n      _sum: {\r\n        amount: true,\r\n      },\r\n    });\r\n\r\n    return {\r\n      budget: budget ? { ...budget, amount: budget.amount.toNumber() } : null,\r\n      currentExpenses: expenses._sum.amount\r\n        ? expenses._sum.amount.toNumber()\r\n        : 0,\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error fetching budget:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function updateBudget(amount) {\r\n  try {\r\n    const { userId } = await auth();\r\n    if (!userId) throw new Error(\"Unauthorized\");\r\n\r\n    const user = await db.user.findUnique({\r\n      where: { clerkUserId: userId },\r\n    });\r\n\r\n    if (!user) throw new Error(\"User not found\");\r\n\r\n    // Update or create budget\r\n    const budget = await db.budget.upsert({\r\n      where: {\r\n        userId: user.id,\r\n      },\r\n      update: {\r\n        amount,\r\n      },\r\n      create: {\r\n        userId: user.id,\r\n        amount,\r\n      },\r\n    });\r\n\r\n    revalidatePath(\"/dashboard\");\r\n    return {\r\n      success: true,\r\n      data: { ...budget, amount: budget.amount.toNumber() },\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error updating budget:\", error);\r\n    return { success: false, error: error.message };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;;;;;;;AAEO,eAAe,uCAAc,GAAd,iBAAiB,SAAS;IAC9C,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAA,GAAA,mLAAA,CAAA,OAAI,AAAD;QAC5B,IAAI,CAAC,QAAQ,MAAM,IAAI,MAAM;QAE7B,MAAM,OAAO,MAAM,6GAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;YACpC,OAAO;gBAAE,aAAa;YAAO;QAC/B;QAEA,IAAI,CAAC,MAAM;YACT,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,SAAS,MAAM,6GAAA,CAAA,KAAE,CAAC,MAAM,CAAC,SAAS,CAAC;YACvC,OAAO;gBACL,QAAQ,KAAK,EAAE;YACjB;QACF;QAEA,+BAA+B;QAC/B,MAAM,cAAc,IAAI;QACxB,MAAM,eAAe,IAAI,KACvB,YAAY,WAAW,IACvB,YAAY,QAAQ,IACpB;QAEF,MAAM,aAAa,IAAI,KACrB,YAAY,WAAW,IACvB,YAAY,QAAQ,KAAK,GACzB;QAGF,MAAM,WAAW,MAAM,6GAAA,CAAA,KAAE,CAAC,WAAW,CAAC,SAAS,CAAC;YAC9C,OAAO;gBACL,QAAQ,KAAK,EAAE;gBACf,MAAM;gBACN,MAAM;oBACJ,KAAK;oBACL,KAAK;gBACP;gBACA;YACF;YACA,MAAM;gBACJ,QAAQ;YACV;QACF;QAEA,OAAO;YACL,QAAQ,SAAS;gBAAE,GAAG,MAAM;gBAAE,QAAQ,OAAO,MAAM,CAAC,QAAQ;YAAG,IAAI;YACnE,iBAAiB,SAAS,IAAI,CAAC,MAAM,GACjC,SAAS,IAAI,CAAC,MAAM,CAAC,QAAQ,KAC7B;QACN;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,MAAM;IACR;AACF;AAEO,eAAe,uCAAU,GAAV,aAAa,MAAM;IACvC,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAA,GAAA,mLAAA,CAAA,OAAI,AAAD;QAC5B,IAAI,CAAC,QAAQ,MAAM,IAAI,MAAM;QAE7B,MAAM,OAAO,MAAM,6GAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;YACpC,OAAO;gBAAE,aAAa;YAAO;QAC/B;QAEA,IAAI,CAAC,MAAM,MAAM,IAAI,MAAM;QAE3B,0BAA0B;QAC1B,MAAM,SAAS,MAAM,6GAAA,CAAA,KAAE,CAAC,MAAM,CAAC,MAAM,CAAC;YACpC,OAAO;gBACL,QAAQ,KAAK,EAAE;YACjB;YACA,QAAQ;gBACN;YACF;YACA,QAAQ;gBACN,QAAQ,KAAK,EAAE;gBACf;YACF;QACF;QAEA,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO;YACL,SAAS;YACT,MAAM;gBAAE,GAAG,MAAM;gBAAE,QAAQ,OAAO,MAAM,CAAC,QAAQ;YAAG;QACtD;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO;YAAE,SAAS;YAAO,OAAO,MAAM,OAAO;QAAC;IAChD;AACF;;;IA7FsB;IA2DA;;AA3DA,+OAAA;AA2DA,+OAAA","debugId":null}},
    {"offset": {"line": 533, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/app/%28main%29/dashboard/_components/account-card.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AccountCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccountCard() from the server but AccountCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/dashboard/_components/account-card.jsx <module evaluation>\",\n    \"AccountCard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,mFACA","debugId":null}},
    {"offset": {"line": 547, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/app/%28main%29/dashboard/_components/account-card.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AccountCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccountCard() from the server but AccountCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/dashboard/_components/account-card.jsx\",\n    \"AccountCard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,+DACA","debugId":null}},
    {"offset": {"line": 561, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/components/create-account-drawer.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CreateAccountDrawer = registerClientReference(\n    function() { throw new Error(\"Attempted to call CreateAccountDrawer() from the server but CreateAccountDrawer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/create-account-drawer.jsx <module evaluation>\",\n    \"CreateAccountDrawer\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,sEACA","debugId":null}},
    {"offset": {"line": 585, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/components/create-account-drawer.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CreateAccountDrawer = registerClientReference(\n    function() { throw new Error(\"Attempted to call CreateAccountDrawer() from the server but CreateAccountDrawer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/create-account-drawer.jsx\",\n    \"CreateAccountDrawer\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,kDACA","debugId":null}},
    {"offset": {"line": 599, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 609, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/app/%28main%29/dashboard/_components/budget-progress.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const BudgetProgress = registerClientReference(\n    function() { throw new Error(\"Attempted to call BudgetProgress() from the server but BudgetProgress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/dashboard/_components/budget-progress.jsx <module evaluation>\",\n    \"BudgetProgress\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,sFACA","debugId":null}},
    {"offset": {"line": 623, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/app/%28main%29/dashboard/_components/budget-progress.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const BudgetProgress = registerClientReference(\n    function() { throw new Error(\"Attempted to call BudgetProgress() from the server but BudgetProgress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/dashboard/_components/budget-progress.jsx\",\n    \"BudgetProgress\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,kEACA","debugId":null}},
    {"offset": {"line": 637, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 647, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/components/ui/card.jsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"rounded-xl border bg-card text-card-foreground shadow\", className)}\r\n    {...props} />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props} />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\r\n    {...props} />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props} />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props} />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACtD,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,yDAAyD;QACtE,GAAG,KAAK;;;;;;AAEb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAEb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAEb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 728, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/app/%28main%29/dashboard/_components/transaction-overview.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DashboardOverview = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardOverview() from the server but DashboardOverview is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/dashboard/_components/transaction-overview.jsx <module evaluation>\",\n    \"DashboardOverview\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,2FACA","debugId":null}},
    {"offset": {"line": 742, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/app/%28main%29/dashboard/_components/transaction-overview.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DashboardOverview = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardOverview() from the server but DashboardOverview is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/dashboard/_components/transaction-overview.jsx\",\n    \"DashboardOverview\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,uEACA","debugId":null}},
    {"offset": {"line": 756, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 766, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/app/%28main%29/dashboard/Calendar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nfunction Calendar() {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [chartData, setChartData] = useState(null);\r\n\r\n  const sampleExpenses = {\r\n    \"2025-03-30\": [\r\n      { category: \"Food\", amount: 20 },\r\n      { category: \"Transport\", amount: 15 },\r\n    ],\r\n    \"2025-03\": [\r\n      { category: \"Food\", amount: 150 },\r\n      { category: \"Transport\", amount: 100 },\r\n      { category: \"Entertainment\", amount: 80 },\r\n    ],\r\n  };\r\n\r\n  const handleDateClick = (info) => {\r\n    const dateStr = info.dateStr;\r\n    setSelectedDate(dateStr);\r\n    updateChart(dateStr, \"daily\");\r\n  };\r\n\r\n  const handleMonthClick = () => {\r\n    const monthStr = selectedDate ? selectedDate.slice(0, 7) : new Date().toISOString().slice(0, 7);\r\n    setSelectedDate(monthStr);\r\n    updateChart(monthStr, \"monthly\");\r\n  };\r\n\r\n  const updateChart = (key, type) => {\r\n    const expenses = sampleExpenses[key] || [];\r\n    const categories = expenses.map((e) => e.category);\r\n    const amounts = expenses.map((e) => e.amount);\r\n\r\n    setChartData({\r\n      data: [\r\n        {\r\n          type: \"pie\",\r\n          labels: categories,\r\n          values: amounts,\r\n        },\r\n      ],\r\n      layout: {\r\n        title: type === \"daily\" ? `Expenses on ${key}` : `Monthly Expenses for ${key}`,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleMonthClick} style={{ marginBottom: \"10px\" }}>\r\n        Show Monthly Expenses\r\n      </button>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        headerToolbar={{\r\n          start: \"today prev,next\",\r\n          center: \"title\",\r\n          end: \"dayGridMonth,timeGridWeek,timeGridDay\",\r\n        }}\r\n        height=\"70vh\"\r\n        dateClick={handleDateClick}\r\n      />\r\n      {chartData && <Plot data={chartData.data} layout={chartData.layout} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEA,SAAS;IACP,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,iBAAiB;QACrB,cAAc;YACZ;gBAAE,UAAU;gBAAQ,QAAQ;YAAG;YAC/B;gBAAE,UAAU;gBAAa,QAAQ;YAAG;SACrC;QACD,WAAW;YACT;gBAAE,UAAU;gBAAQ,QAAQ;YAAI;YAChC;gBAAE,UAAU;gBAAa,QAAQ;YAAI;YACrC;gBAAE,UAAU;gBAAiB,QAAQ;YAAG;SACzC;IACH;IAEA,MAAM,kBAAkB,CAAC;QACvB,MAAM,UAAU,KAAK,OAAO;QAC5B,gBAAgB;QAChB,YAAY,SAAS;IACvB;IAEA,MAAM,mBAAmB;QACvB,MAAM,WAAW,eAAe,aAAa,KAAK,CAAC,GAAG,KAAK,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG;QAC7F,gBAAgB;QAChB,YAAY,UAAU;IACxB;IAEA,MAAM,cAAc,CAAC,KAAK;QACxB,MAAM,WAAW,cAAc,CAAC,IAAI,IAAI,EAAE;QAC1C,MAAM,aAAa,SAAS,GAAG,CAAC,CAAC,IAAM,EAAE,QAAQ;QACjD,MAAM,UAAU,SAAS,GAAG,CAAC,CAAC,IAAM,EAAE,MAAM;QAE5C,aAAa;YACX,MAAM;gBACJ;oBACE,MAAM;oBACN,QAAQ;oBACR,QAAQ;gBACV;aACD;YACD,QAAQ;gBACN,OAAO,SAAS,UAAU,CAAC,YAAY,EAAE,KAAK,GAAG,CAAC,qBAAqB,EAAE,KAAK;YAChF;QACF;IACF;IAEA,qBACE,8OAAC;;0BACC,8OAAC;gBAAO,SAAS;gBAAkB,OAAO;oBAAE,cAAc;gBAAO;0BAAG;;;;;;0BAGpE,8OAAC,wJAAA,CAAA,UAAY;gBACX,SAAS;oBAAC,kJAAA,CAAA,UAAa;oBAAE,mJAAA,CAAA,UAAc;oBAAE,sJAAA,CAAA,UAAiB;iBAAC;gBAC3D,aAAY;gBACZ,eAAe;oBACb,OAAO;oBACP,QAAQ;oBACR,KAAK;gBACP;gBACA,QAAO;gBACP,WAAW;;;;;;YAEZ,2BAAa,8OAAC,wJAAA,CAAA,UAAI;gBAAC,MAAM,UAAU,IAAI;gBAAE,QAAQ,UAAU,MAAM;;;;;;;;;;;;AAGxE;uCAEe","debugId":null}},
    {"offset": {"line": 893, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/app/%28main%29/dashboard/page.jsx"],"sourcesContent":["import { Suspense } from \"react\";\r\nimport { getUserAccounts } from \"@/actions/dashboard\";\r\nimport { getDashboardData } from \"@/actions/dashboard\";\r\nimport { getCurrentBudget } from \"@/actions/budget\";\r\nimport { AccountCard } from \"./_components/account-card\";\r\nimport { CreateAccountDrawer } from \"@/components/create-account-drawer\";\r\nimport { BudgetProgress } from \"./_components/budget-progress\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Plus } from \"lucide-react\";\r\nimport { DashboardOverview } from \"./_components/transaction-overview\";\r\nimport Calendar from \"./Calendar\";\r\n\r\nexport default async function DashboardPage() {\r\n  const [accounts, transactions] = await Promise.all([\r\n    getUserAccounts(),\r\n    getDashboardData(),\r\n  ]);\r\n\r\n  const defaultAccount = accounts?.find((account) => account.isDefault);\r\n\r\n  // Get budget for default account\r\n  let budgetData = null;\r\n  if (defaultAccount) {\r\n    budgetData = await getCurrentBudget(defaultAccount.id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Budget Progress */}\r\n      <h1> Copy karne wale log</h1>\r\n      <Calendar/>\r\n      <BudgetProgress\r\n        initialBudget={budgetData?.budget}\r\n        currentExpenses={budgetData?.currentExpenses || 0}\r\n      />\r\n\r\n      {/* Dashboard Overview */}\r\n      <DashboardOverview\r\n        accounts={accounts}\r\n        transactions={transactions || []}\r\n      />\r\n\r\n      {/* Accounts Grid */}\r\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\r\n        <CreateAccountDrawer>\r\n          <Card className=\"hover:shadow-md transition-shadow cursor-pointer border-dashed\">\r\n            <CardContent className=\"flex flex-col items-center justify-center text-muted-foreground h-full pt-5\">\r\n              <Plus className=\"h-10 w-10 mb-2\" />\r\n              <p className=\"text-sm font-medium\">Add New Account</p>\r\n            </CardContent>\r\n          </Card>\r\n        </CreateAccountDrawer>\r\n        {accounts.length > 0 &&\r\n          accounts?.map((account) => (\r\n            <AccountCard key={account.id} account={account} />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAEe,eAAe;IAC5B,MAAM,CAAC,UAAU,aAAa,GAAG,MAAM,QAAQ,GAAG,CAAC;QACjD,CAAA,GAAA,oHAAA,CAAA,kBAAe,AAAD;QACd,CAAA,GAAA,oHAAA,CAAA,mBAAgB,AAAD;KAChB;IAED,MAAM,iBAAiB,UAAU,KAAK,CAAC,UAAY,QAAQ,SAAS;IAEpE,iCAAiC;IACjC,IAAI,aAAa;IACjB,IAAI,gBAAgB;QAClB,aAAa,MAAM,CAAA,GAAA,iHAAA,CAAA,mBAAgB,AAAD,EAAE,eAAe,EAAE;IACvD;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;0BAAG;;;;;;0BACJ,8OAAC,yIAAA,CAAA,UAAQ;;;;;0BACT,8OAAC,kKAAA,CAAA,iBAAc;gBACb,eAAe,YAAY;gBAC3B,iBAAiB,YAAY,mBAAmB;;;;;;0BAIlD,8OAAC,uKAAA,CAAA,oBAAiB;gBAChB,UAAU;gBACV,cAAc,gBAAgB,EAAE;;;;;;0BAIlC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,0IAAA,CAAA,sBAAmB;kCAClB,cAAA,8OAAC,yHAAA,CAAA,OAAI;4BAAC,WAAU;sCACd,cAAA,8OAAC,yHAAA,CAAA,cAAW;gCAAC,WAAU;;kDACrB,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAChB,8OAAC;wCAAE,WAAU;kDAAsB;;;;;;;;;;;;;;;;;;;;;;oBAIxC,SAAS,MAAM,GAAG,KACjB,UAAU,IAAI,CAAC,wBACb,8OAAC,+JAAA,CAAA,cAAW;4BAAkB,SAAS;2BAArB,QAAQ,EAAE;;;;;;;;;;;;;;;;;AAKxC","debugId":null}},
    {"offset": {"line": 1027, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/avira/OneDrive/Desktop/WealthX/app/%28main%29/dashboard/layout.js"],"sourcesContent":["import DashboardPage from \"./page\";\r\nimport { BarLoader } from \"react-spinners\";\r\nimport { Suspense } from \"react\";\r\n\r\nexport default function Layout() {\r\n  return (\r\n    <div className=\"px-5\">\r\n      <div className=\"flex items-center justify-between mb-5\">\r\n        <h1 className=\"text-6xl font-bold tracking-tight gradient-title\">\r\n          Dashboard\r\n        </h1>\r\n      </div>\r\n      <Suspense\r\n        fallback={<BarLoader className=\"mt-4\" width={\"100%\"} color=\"#9333ea\" />}\r\n      >\r\n        <DashboardPage />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAG,WAAU;8BAAmD;;;;;;;;;;;0BAInE,8OAAC,qMAAA,CAAA,WAAQ;gBACP,wBAAU,8OAAC,6LAAA,CAAA,YAAS;oBAAC,WAAU;oBAAO,OAAO;oBAAQ,OAAM;;;;;;0BAE3D,cAAA,8OAAC,qIAAA,CAAA,UAAa;;;;;;;;;;;;;;;;AAItB","debugId":null}}]
}